class Enemy{constructor(i){this.direction="horizontal",this.currentDirection="left",this.image=new Image,this.image.src="assets/images/enemy.png",this.context=i,this.x=0,this.y=0,this.currentAnimation="idle",this.animate=0,this.destination=[0,0],this.isMoving=!1}animateIdle(){this.context.drawImage(this.image,0,0,32,32,this.x,this.y,64,64)}animateRight(){0===this.animate?(this.context.drawImage(this.image,0,32,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,32,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,32,32,32,this.x,this.y,64,64),this.animate=0)}animateLeft(){0===this.animate?(this.context.drawImage(this.image,0,96,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,96,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,96,32,32,this.x,this.y,64,64),this.animate=0)}animateUp(){0===this.animate?(this.context.drawImage(this.image,0,64,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,64,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,64,32,32,this.x,this.y,64,64),this.animate=0)}animateDown(){0===this.animate?(this.context.drawImage(this.image,0,0,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,0,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,0,32,32,this.x,this.y,64,64),this.animate=0)}render(){"walkRight"===this.currentAnimation?this.animateRight():"walkLeft"===this.currentAnimation?this.animateLeft():"walkUp"===this.currentAnimation?this.animateUp():"walkDown"===this.currentAnimation?this.animateDown():"idle"===this.currentAnimation&&this.animateIdle(),this.isMoving&&this.moveEnemy()}moveEnemy(){this.x!==this.destination[0]?this.x>this.destination[0]?this.x=this.x-4:this.x=this.x+4:this.y!==this.destination[1]?this.y>this.destination[1]?this.y=this.y-4:this.y=this.y+4:this.isMoving=!1}Move(i){"vertical"===this.direction?"up"===this.currentDirection?this.IsMovePossible("up",i)?(this.isMoving=!0,this.currentAnimation="walkUp",this.destination=[this.x,this.y-64]):(this.currentDirection="down",this.isMoving=!0,this.currentAnimation="walkDown",this.destination=[this.x,this.y+64]):this.IsMovePossible("down",i)?(this.isMoving=!0,this.currentAnimation="walkDown",this.destination=[this.x,this.y+64]):(this.currentDirection="up",this.isMoving=!0,this.currentAnimation="walkUp",this.destination=[this.x,this.y-64]):"left"===this.currentDirection?this.IsMovePossible("left",i)?(this.isMoving=!0,this.currentAnimation="walkLeft",this.destination=[this.x-64,this.y]):(this.currentDirection="right",this.isMoving=!0,this.currentAnimation="walkRight",this.destination=[this.x+64,this.y]):this.IsMovePossible("right",i)?(this.isMoving=!0,this.currentAnimation="walkRight",this.destination=[this.x+64,this.y]):(this.currentDirection="left",this.isMoving=!0,this.currentAnimation="walkLeft",this.destination=[this.x-64,this.y])}location(){let i,t;return i=this.x>0?this.x/64:0,[t=this.y>0?this.y/64:0,i]}IsMovePossible(i,t){return"down"===i?6!==this.location()[1]&&0!==t[this.location()[0]+1][this.location()[1]]:"up"===i?0!==this.location()[0]&&0!==t[this.location()[0]-1][this.location()[1]]:"left"===i?0!==this.location()[1]&&0!==t[this.location()[0]][this.location()[1]-1]:"right"===i?7!==this.location()[1]&&0!==t[this.location()[0]][this.location()[1]+1]:void 0}}
class Game{update(){if(1!==gameState.backing&&!1===gameState.dead&&(state.pressedKeys.left?player.move("left",level.getCurrentLevel().map)&&(music.playMove(),gameState.steps.push("left"),enemies.map(e=>e.Move(level.getCurrentLevel().map))):state.pressedKeys.right?player.move("right",level.getCurrentLevel().map)&&(music.playMove(),gameState.steps.push("right"),enemies.map(e=>e.Move(level.getCurrentLevel().map))):state.pressedKeys.up?player.move("up",level.getCurrentLevel().map)&&(music.playMove(),gameState.steps.push("up"),enemies.map(e=>e.Move(level.getCurrentLevel().map))):state.pressedKeys.down&&player.move("down",level.getCurrentLevel().map)&&(music.playMove(),gameState.steps.push("down"),enemies.map(e=>e.Move(level.getCurrentLevel().map)))),1===gameState.backing&&!1===player.isMoving&&!1===gameState.dead){let e=gameState.steps.pop();void 0===e&&(gameState.dead=!0,gameState.backing=0,gameState.state="dead"),enemies.map(e=>e.Move(level.getCurrentLevel().map)),"up"===e&&(player.move("down",level.getCurrentLevel().map),music.playMove()),"left"===e&&(player.move("right",level.getCurrentLevel().map),music.playMove()),"right"===e&&(player.move("left",level.getCurrentLevel().map),music.playMove()),"down"===e&&(player.move("up",level.getCurrentLevel().map),music.playMove())}gameState.checkDead(player,enemies),Background.render(),cx.drawImage(goalImage,0,0,32,32,64*level.getCurrentLevel().endLocation[0],64*level.getCurrentLevel().endLocation[1],64,64),cx.drawImage(startImage,0,32,32,32,64*level.getCurrentLevel().startLocation[0],64*level.getCurrentLevel().startLocation[1],64,64),enemies.map(e=>e.render()),gameState.checkHalfway(player),gameState.checkStageClear(player,level.getCurrentLevel())&&(level.setNextLevel(),3===level.currentLevel?gameState.state="end":gameState.initiateLevel(player,start,end,level.getCurrentLevel()))}}
class GameState{constructor(){this.state="start_menu",this.halfway=0,this.steps=[],this.backing=0,this.dead=!0,this.stage=0}checkHalfway(e){e.x===end.x&&e.y===end.y&&(this.backing=1,this.halfway=1)}checkStageClear(e,t){return e.x===64*t.startLocation[0]&&e.y===64*t.startLocation[1]&&1===gameState.halfway}checkDead(e,t){t.map(t=>this.checkPlayerAndEnemyCollision(e,t))}checkPlayerAndEnemyCollision(e,t){return e.x===t.x&&e.y===t.y&&(this.dead=!0,this.state="dead",!0)}initiateLevel(e,t,a,i){enemies=[],this.halfway=0,this.backing=0,this.steps=[],this.dead=!1,t.x=64*i.startLocation[0],t.y=64*i.startLocation[1],a.x=64*i.endLocation[0],a.y=64*i.endLocation[1],Background.setMap(i.map),this.spawnEnemies()}spawnEnemies(){void 0!==level.getCurrentLevel().enemies&&level.getCurrentLevel().enemies.map(e=>{if("straight"===e.type){let t=new Enemy(cx);t.y=64*e.location[0],t.x=64*e.location[1],t.direction=e.direction,t.currentDirection=e.currentDirection,enemies.push(t)}})}}
class Levels{constructor(t){this.currentLevel=t,this.levels=[{name:"level1",startLocation:[1,4],endLocation:[6,3],map:[[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]]},{name:"level2",playerLocation:[2,2],startLocation:[2,2],endLocation:[6,5],enemies:[{type:"straight",direction:"vertical",currentDirection:"up",location:[4,4]},{type:"straight",direction:"horizontal",currentDirection:"left",location:[4,4]}],map:[[0,0,1,2,2,3,0,0],[0,1,5,5,5,6,0,0],[0,4,5,5,5,5,3,0],[0,4,5,5,5,5,5,3],[0,4,5,5,5,5,5,6],[0,7,8,8,5,5,5,6],[0,0,0,0,7,8,8,9],[0,0,0,0,0,0,0,0]]},{name:"level3",playerLocation:[6,1],startLocation:[1,1],endLocation:[6,6],enemies:[{type:"straight",direction:"horizontal",currentDirection:"left",location:[5,4]},{type:"straight",direction:"horizontal",currentDirection:"right",location:[6,3]},{type:"straight",direction:"horizontal",currentDirection:"left",location:[1,4]},{type:"straight",direction:"horizontal",currentDirection:"right",location:[2,3]}],map:[[1,2,3,0,0,1,2,3],[4,5,5,2,2,5,5,6],[4,5,5,8,8,5,5,6],[4,5,6,0,0,4,5,6],[4,5,6,0,0,4,5,6],[4,5,5,2,2,5,5,6],[4,5,5,8,8,5,5,6],[7,8,9,0,0,7,8,9]]}]}selectedTile(t,e){let i,o;return i=t>0&&t<520?t/64:t>519?7:0,o=e>0&&e<520?e/64:e>519?7:0,[Math.floor(o),Math.floor(i)]}changeTile(t,e){let i=this.selectedTile(t,e);console.log(i),this.levels[0].map[i[0]][i[1]]>8?this.levels[0].map[i[0]][i[1]]=0:this.levels[0].map[i[0]][i[1]]+=1}getCurrentLevel(){return this.levels[this.currentLevel]}setNextLevel(){this.currentLevel++}}
class Music{constructor(){}play(){}playMove(){}}
class Player{constructor(t){let i=new Image;i.src="assets/images/robot.png",this.context=t,this.image=i,this.x=0,this.y=0,this.animate=0,this.destination=[0,0],this.currentAnimation="idle",this.isMoving=!1}animateIdle(){this.context.drawImage(this.image,0,0,32,32,this.x,this.y,64,64)}animateRight(){0===this.animate?(this.context.drawImage(this.image,0,32,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,32,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,32,32,32,this.x,this.y,64,64),this.animate=0)}animateLeft(){0===this.animate?(this.context.drawImage(this.image,0,96,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,96,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,96,32,32,this.x,this.y,64,64),this.animate=0)}animateUp(){0===this.animate?(this.context.drawImage(this.image,0,64,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,64,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,64,32,32,this.x,this.y,64,64),this.animate=0)}animateDown(){0===this.animate?(this.context.drawImage(this.image,0,0,32,32,this.x,this.y,64,64),this.animate++):1===this.animate?(this.context.drawImage(this.image,32,0,32,32,this.x,this.y,64,64),this.animate++):(this.context.drawImage(this.image,64,0,32,32,this.x,this.y,64,64),this.animate=0)}render(){"walkRight"===this.currentAnimation?this.animateRight():"walkLeft"===this.currentAnimation?this.animateLeft():"walkUp"===this.currentAnimation?this.animateUp():"walkDown"===this.currentAnimation?this.animateDown():"idle"===this.currentAnimation&&this.animateIdle(),this.isMoving&&this.movePlayer()}movePlayer(){this.x!==this.destination[0]?this.x>this.destination[0]?this.x=this.x-4:this.x=this.x+4:this.y!==this.destination[1]?this.y>this.destination[1]?this.y=this.y-4:this.y=this.y+4:this.isMoving=!1}move(t,i){return!this.isMoving&&("down"===t?!!this.IsMovePossible("down",i)&&(this.isMoving=!0,this.currentAnimation="walkDown",this.destination=[this.x,this.y+64],!0):"up"===t?!!this.IsMovePossible("up",i)&&(this.isMoving=!0,this.currentAnimation="walkUp",this.destination=[this.x,this.y-64],!0):"left"===t?!!this.IsMovePossible("left",i)&&(this.isMoving=!0,this.currentAnimation="walkLeft",this.destination=[this.x-64,this.y],!0):"right"===t?!!this.IsMovePossible("right",i)&&(this.isMoving=!0,this.currentAnimation="walkRight",this.destination=[this.x+64,this.y],!0):void 0)}location(){let t,i;return t=this.x>0?this.x/64:0,[i=this.y>0?this.y/64:0,t]}IsMovePossible(t,i){return"down"===t?7!==this.location()[0]&&0!==i[this.location()[0]+1][this.location()[1]]:"up"===t?0!==this.location()[0]&&0!==i[this.location()[0]-1][this.location()[1]]:"left"===t?0!==this.location()[1]&&0!==i[this.location()[0]][this.location()[1]-1]:"right"===t?7!==this.location()[1]&&0!==i[this.location()[0]][this.location()[1]+1]:void 0}}
class Request{constructor(s){let e=new Image;e.src="assets/images/request.png",this.context=s,this.image=e,this.x=0,this.y=0,this.destination=[0,0],this.xFrame=0,this.yFrame=0}isConnected(s){let e=[0,0],t=this.navigate([[0,1,1,0,1,1,1,1],[1,0,1,0,0,1,0,0],[0,0,1,1,1,1,0,0],[0,0,1,1,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0]],e,[e]);-1===searchForArray(t,[0,7])?console.log("You didnt reach your goal :("):console.log("reach your goal :)"),console.log("result from navigate: ",result)}vectorsAreTheSame(s,e){return s[0]===e[0]&&s[1]===e[1]}navigate(s,e,t=[]){return this.possibleMovements(s,e,t).forEach(e=>{t.push(e),this.navigate(s,e,t)}),t}possibleMovements(s,e,t){let i=e[0],r=e[1],o=this.isNorthPossible(s,i,r),h=this.isEastPossible(s,i,r),a=this.isSouthPossible(s,i,r),n=this.isWestPossible(s,i,r),l=[];!1!==o&&l.push(o),!1!==h&&l.push(h),!1!==a&&l.push(a),!1!==n&&l.push(n);let u=[];return l.forEach(s=>{-1===searchForArray(t,s)&&u.push(s)}),u}isNorthPossible(s,e,t){return 0!==e&&(1===s[e-1][t]&&[e-1,t])}isEastPossible(s,e,t){return 7!==t&&(1===s[e][t+1]&&[e,t+1])}isSouthPossible(s,e,t){return 7!==e&&(1===s[e+1][t]&&[e+1,t])}isWestPossible(s,e,t){return 0!==t&&(1===s[e][t-1]&&[e,t-1])}connected(s,e,t){return!0}render(){this.context.drawImage(this.image,this.xFrame,this.yFrame,32,32,this.x,this.y,64,64)}}
class TestTile{constructor(t){let s=new Image;s.src="assets/images/robot.png",this.context=t,this.image=s,this.x=0,this.y=0,this.destination=[0,0],this.xFrame=0,this.yFrame=0}nextFrame(){this.xFrame=0,this.yFrame=32}render(){this.context.drawImage(this.image,this.xFrame,this.yFrame,32,32,this.x,this.y,64,64)}}
class TextInterface{constructor(){}renderStart(){cx.font="50px Arial Black",cx.fillStyle="#FFF",cx.fillText("404",200,170),cx.font="20px Arial Black",cx.fillText("File not found",175,220),cx.fillText("Press <Space> to play",135,350),cx.font="8px Arial",cx.fillText("Created by: Daivan Trinh & Håkan Einarsson for js13kGames.com 2020",10,500)}renderEnd(){cx.font="50px Arial Black",cx.fillStyle="#FFF",cx.fillText("The End",145,170),cx.font="20px Arial Black",cx.fillText("Thank you for playing our game",85,220),cx.font="15px Arial Black",cx.fillText("Created by Daivan Trinh & Hakan Einarsson",75,350)}renderDead(){cx.font="50px Arial Black",cx.fillStyle="#FFF",cx.fillText("You died",140,170),cx.font="20px Arial Black",cx.fillText("Press Space to try again",115,350)}}
class TileSheet{constructor(t){let e=new Image;e.src="assets/images/wires.png",this.context=t,this.image=e,this.map=[]}setMap(t){this.map=t}render(){let t=0;this.map.length>0&&this.map.map(e=>{let a=0;e.map(e=>{let s=this.calculate(e);0!==e&&this.context.drawImage(this.image,s[0],s[1],32,32,64*a,64*t,64,64),a++}),t++})}calculate(t){return 1===t?[0,0]:2===t?[32,0]:3===t?[64,0]:4===t?[0,32]:5===t?[32,32]:6===t?[64,32]:7===t?[0,64]:8===t?[32,64]:9===t?[64,64]:void 0}}
!function(t){if("object"==typeof module&&"object"==typeof module.exports)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();window.astar=n.astar,window.Graph=n.Graph}}(function(){function t(t){for(var n=t,i=[];n.parent;)i.unshift(n),n=n.parent;return i}var n={search:function(i,e,s,r){i.cleanDirty();var h=(r=r||{}).heuristic||n.heuristics.manhattan,c=r.closest||!1,u=new o(function(t){return t.f}),a=e;for(e.h=h(e,s),i.markDirty(e),u.push(e);u.size()>0;){var f=u.pop();if(f===s)return t(f);f.closed=!0;for(var p=i.neighbors(f),l=0,d=p.length;l<d;++l){var g=p[l];if(!g.closed&&!g.isWall()){var y=f.g+g.getCost(f),v=g.visited;(!v||y<g.g)&&(g.visited=!0,g.parent=f,g.h=g.h||h(g,s),g.g=y,g.f=g.g+g.h,i.markDirty(g),c&&(g.h<a.h||g.h===a.h&&g.g<a.g)&&(a=g),v?u.rescoreElement(g):u.push(g))}}}return c?t(a):[]},heuristics:{manhattan:function(t,n){return Math.abs(n.x-t.x)+Math.abs(n.y-t.y)},diagonal:function(t,n){var i=Math.sqrt(2),e=Math.abs(n.x-t.x),o=Math.abs(n.y-t.y);return 1*(e+o)+(i-2)*Math.min(e,o)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function i(t,n){n=n||{},this.nodes=[],this.diagonal=!!n.diagonal,this.grid=[];for(var i=0;i<t.length;i++){this.grid[i]=[];for(var o=0,s=t[i];o<s.length;o++){var r=new e(i,o,s[o]);this.grid[i][o]=r,this.nodes.push(r)}}this.init()}function e(t,n,i){this.x=t,this.y=n,this.weight=i}function o(t){this.content=[],this.scoreFunction=t}return i.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)n.cleanNode(this.nodes[t])},i.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)n.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},i.prototype.markDirty=function(t){this.dirtyNodes.push(t)},i.prototype.neighbors=function(t){var n=[],i=t.x,e=t.y,o=this.grid;return o[i-1]&&o[i-1][e]&&n.push(o[i-1][e]),o[i+1]&&o[i+1][e]&&n.push(o[i+1][e]),o[i]&&o[i][e-1]&&n.push(o[i][e-1]),o[i]&&o[i][e+1]&&n.push(o[i][e+1]),this.diagonal&&(o[i-1]&&o[i-1][e-1]&&n.push(o[i-1][e-1]),o[i+1]&&o[i+1][e-1]&&n.push(o[i+1][e-1]),o[i-1]&&o[i-1][e+1]&&n.push(o[i-1][e+1]),o[i+1]&&o[i+1][e+1]&&n.push(o[i+1][e+1])),n},i.prototype.toString=function(){for(var t=[],n=this.grid,i=0;i<n.length;i++){for(var e=[],o=n[i],s=0;s<o.length;s++)e.push(o[s].weight);t.push(e.join(" "))}return t.join("\n")},e.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},e.prototype.getCost=function(t){return t&&t.x!=this.x&&t.y!=this.y?1.41421*this.weight:this.weight},e.prototype.isWall=function(){return 0===this.weight},o.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],n=this.content.pop();return this.content.length>0&&(this.content[0]=n,this.bubbleUp(0)),t},remove:function(t){var n=this.content.indexOf(t),i=this.content.pop();n!==this.content.length-1&&(this.content[n]=i,this.scoreFunction(i)<this.scoreFunction(t)?this.sinkDown(n):this.bubbleUp(n))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var n=this.content[t];t>0;){var i=(t+1>>1)-1,e=this.content[i];if(!(this.scoreFunction(n)<this.scoreFunction(e)))break;this.content[i]=n,this.content[t]=e,t=i}},bubbleUp:function(t){for(var n=this.content.length,i=this.content[t],e=this.scoreFunction(i);;){var o,s=t+1<<1,r=s-1,h=null;if(r<n){var c=this.content[r];(o=this.scoreFunction(c))<e&&(h=r)}if(s<n){var u=this.content[s];this.scoreFunction(u)<(null===h?e:o)&&(h=s)}if(null===h)break;this.content[t]=this.content[h],this.content[h]=i,t=h}}},{astar:n,Graph:i}});
let vendors=["webkit","moz"];for(let e=0;e<vendors.length&&!window.requestAnimationFrame;++e)window.requestAnimationFrame=window[vendors[e]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[vendors[e]+"CancelAnimationFrame"]||window[vendors[e]+"CancelRequestAnimationFrame"];let enemies=[],textInterface=new TextInterface,game=new Game,gameState=new GameState,level=new Levels(0),canvas=document.getElementById("canvas"),cw=canvas.width,ch=canvas.height,fps=30,interval=1e3/fps,lastTime=(new Date).getTime(),currentTime=0,delta=0;cx=canvas.getContext("2d");let Background=new TileSheet(cx),player=new Player(cx),testTile=new TestTile(cx),requestTile=new Request(cx),music=new Music,startImage=new Image;startImage.src="assets/images/objects.png";let goalImage=new Image;goalImage.src="assets/images/objects.png";let start=[0,0],end=[3,5],state={pressedKeys:{space:!1,left:!1,right:!1,up:!1,down:!1}},keyMap={Enter:"we tryin",ArrowRight:"right",ArrowLeft:"left",ArrowUp:"up",ArrowDown:"down",Space:"space"};function keydown(e){let t=keyMap[e.code];state.pressedKeys[t]=!0,requestTile.isConnected(level.getCurrentLevel().map)}function keyup(e){let t=keyMap[e.code];state.pressedKeys[t]=!1}function onClick(e){level.changeTile(e.pageX,e.pageY)}function searchForArray(e,t){var a,n,r;for(a=0;a<e.length;++a)if(t.length===e[a].length){for(r=e[a],n=0;n<t.length&&t[n]===r[n];++n);if(n===t.length)return a}return-1}function gameLoop(){window.requestAnimationFrame(gameLoop),testTile.x=192,testTile.y=192,state.pressedKeys.space&&"start_menu"===gameState.state&&(gameState.initiateLevel(player,start,end,level.getCurrentLevel()),gameState.state="level1"),state.pressedKeys.space&&!0===gameState.dead&&(gameState.initiateLevel(player,start,end,level.getCurrentLevel()),gameState.state="inGame"),currentTime=(new Date).getTime(),(delta=currentTime-lastTime)>interval&&(cx.clearRect(0,0,cw,ch),"start_menu"===gameState.state?(cx.clearRect(0,0,cw,cw),textInterface.renderStart()):"end"===gameState.state?(cx.clearRect(0,0,cw,cw),textInterface.renderEnd()):"dead"===gameState.state?(game.update(),textInterface.renderDead()):game.update(),lastTime=currentTime-delta%interval)}function loadImage(e){return new Promise(t=>{let a=new Image;a.onload=(()=>t(a)),a.src=e})}window.addEventListener("keydown",keydown,!1),window.addEventListener("keyup",keyup,!1),window.addEventListener("click",onClick,!1),Promise.all([loadImage("assets/images/ground.png"),loadImage("assets/images/robot.png"),loadImage("assets/images/objects.png"),loadImage("assets/images/enemy.png")]).then(()=>{gameLoop()});var graph=new Graph([[1,1,1,1],[0,0,0,0],[0,0,1,1]]),start1=graph.grid[0][0],end1=graph.grid[2][2],result=astar.search(graph,start1,end1);console.log(result);